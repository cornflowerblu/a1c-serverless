name: Run Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Add permissions block to grant access to issues and pull requests
permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
    
    - name: Run linting (non-blocking)
      run: npm run lint || echo "Linting issues found, but continuing workflow"
    
    - name: Run TypeScript type checking (non-blocking)
      run: npx tsc --noEmit || echo "Type checking issues found, but continuing workflow"
    
    - name: Run tests
      run: npm test
      
    - name: Set up Supabase local development
      run: |
        npm install -g supabase
        supabase start
      
    - name: Run webhook tests
      env:
        NEXT_PUBLIC_SUPABASE_URL: http://localhost:54321
        SUPABASE_SERVICE_ROLE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSJ9.vI9obAHOGyVVKa3pD--kJlyxp-Z2zV9UUMAhKpNLAcU
        CLERK_WEBHOOK_SECRET: ${{ secrets.CLERK_WEBHOOK_SECRET }}
      run: |
        # Deploy webhook functions to local Supabase
        supabase functions deploy clerk-webhook --no-verify-jwt
        supabase functions deploy user-job-processor --no-verify-jwt
        
        # Run SQL setup for job queue
        PGPASSWORD=postgres psql -h localhost -U postgres -d postgres -p 54322 -f src/supabase/functions/sql/job_queue_functions.sql
        
        # Run webhook tests
        npx cypress run --spec "cypress/e2e/webhook-*.cy.ts"
      
    - name: Build application
      env:
        NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}}
        CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY}}
      run: npm run build
      
    - name: Add test status comment to PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Test and Build Results ðŸ§ª
          âœ… Tests have passed successfully!
          âœ… Build completed successfully!
          
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
